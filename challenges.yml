webpack_encore_entry_tags:
  question: |
    What's the difference between these two Twig's functions
    `encore_entry_link_tags('app')` and `encore_entry_script_tags('app')`?
  explanation: |
    The function `encore_entry_link_tags('app')` will render the built version of the
    `app.css` file, and `encore_entry_script_tags('app')` will render the build version
    of the `app.js` file. And the `app` entry is defined in the `webpack.config.js` file.
  features:
    multiple_choice:
      choices:
        a: |
          None, both functions do the same thing
        b: |
          `encore_entry_link_tags('app')` is for rendering styles tags
          and `encore_entry_script_tags('app')` is for rendering script tags
        c: |
          `encore_entry_link_tags('app')` is for rendering script tags
          and `encore_entry_script_tags('app')` is for rendering styles tags
        d: |
          `encore_entry_link_tags('app')` is for rendering `noscript` tags
          and `encore_entry_script_tags('app')` is for rendering script tags
      correct: b
css_import_module:
  question: |
    Why Ryan prefixed the package name with a `~` when importing
    a CSS module?
  explanation: |
    Prefixing a package name with a `~` tells the compiler to look for it
    inside the `node_modules` directory.
  features:
    multiple_choice:
      choices:
        a: |
          Ryan was just been fancy.
        b: |
          It makes the path relative.
        c: |
          It makes the path absolute.
        d: |
          It's required when importing a package from the `node_modules` directory.
      correct: d
stimulus_controllers_convention:
  question: |
    Which Stimulus controller does this element will connect to `<div data-controller="api-manager"></div>`?
  explanation: |
    Stimulus has some basic naming conventions for filenames and identifiers. For filenames use the snake_case
    or kebab-case, e.g. `controllers/date_picker_controller.js`, `controllers/list-item-controller.js`
    And for identifiers always use the kebab-case (`list-item`).
    * The snake_case takes precedence if there are two files with the same name but using each of the naming conventions.
  features:
    multiple_choice:
      choices:
        a: |
          It will connect to the `api_manager_controller.js` file
        b: |
          It will connect to the `api-manager-controller.js` file
        c: |
          It will connect to the `api-manager_controller.js` file
        d: |
          It will connect to the `api_manager.js` file
      correct: a
